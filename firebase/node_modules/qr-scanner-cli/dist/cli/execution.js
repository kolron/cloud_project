"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var yargs_1 = __importDefault(require("yargs"));
var scanFromFile_1 = require("../pipelines/scanFromFile");
var boxen_1 = require("../infrastructure/boxen");
var flags_1 = __importDefault(require("./flags"));
var execution = function (args) {
    var yargsInstance = (0, yargs_1.default)(args)
        .strict()
        .example([
        ['qrscanner ./qrCode.jpg', (0, boxen_1.greenBox)('This message is written in a QR Code', { margin: 1 })],
        ['qrscanner ./qrCode.jpg --clear', '\nThis message is written in a QR Code'],
    ])
        .command('$0 <file>', 'Scan a QR Code from a file')
        .positional('file', {
        describe: 'Path to the file to scan',
        type: 'string',
        demandOption: true,
    })
        .options(flags_1.default)
        .help();
    var argv = yargsInstance.argv;
    var _ = argv._, $0 = argv.$0, file = argv.file, flagsTreated = __rest(argv, ["_", "$0", "file"]);
    return (0, scanFromFile_1.scanFromFileOnCli)(file, flagsTreated).catch(function (error) {
        console.error(error.message);
        return yargsInstance.exit(1, error);
    });
};
exports.default = execution;
